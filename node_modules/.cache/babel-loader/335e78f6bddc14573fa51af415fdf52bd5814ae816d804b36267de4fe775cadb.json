{"ast":null,"code":"var _jsxFileName = \"/home/titus/Development/code/phase-2/bot-battlr-code-challange/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // If you use Axios for data fetching\nimport BotCard from './BotCard';\nimport FilterBar from './FilterBar'; // Import the FilterBar component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotCollection() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [filteredBots, setFilteredBots] = useState([]); // New state to hold filtered bots\n\n  useEffect(() => {\n    // Fetch data from the local server using Axios (or any other method)\n    axios.get('http://localhost:8001/bots').then(response => {\n      setBots(response.data);\n      setFilteredBots(response.data); // Initialize filteredBots with all bots\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  const handleFilter = botClass => {\n    if (botClass === 'all') {\n      setFilteredBots(bots); // Show all bots\n    } else {\n      const filtered = bots.filter(bot => bot.bot_class === botClass);\n      setFilteredBots(filtered); // Show bots of the selected class\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bot Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-list\",\n      children: filteredBots.map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n        bot: bot\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"3VxE6L+VT2ZeW3efIFm3uTmi6+8=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","useEffect","axios","BotCard","FilterBar","jsxDEV","_jsxDEV","BotCollection","_s","bots","setBots","filteredBots","setFilteredBots","get","then","response","data","catch","error","console","handleFilter","botClass","filtered","filter","bot","bot_class","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilter","className","map","id","_c","$RefreshReg$"],"sources":["/home/titus/Development/code/phase-2/bot-battlr-code-challange/src/components/BotCollection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // If you use Axios for data fetching\nimport BotCard from './BotCard';\nimport FilterBar from './FilterBar'; // Import the FilterBar component\n\nfunction BotCollection() {\n  const [bots, setBots] = useState([]);\n  const [filteredBots, setFilteredBots] = useState([]); // New state to hold filtered bots\n\n  useEffect(() => {\n    // Fetch data from the local server using Axios (or any other method)\n    axios.get('http://localhost:8001/bots')\n      .then((response) => {\n        setBots(response.data);\n        setFilteredBots(response.data); // Initialize filteredBots with all bots\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  const handleFilter = (botClass) => {\n    if (botClass === 'all') {\n      setFilteredBots(bots); // Show all bots\n    } else {\n      const filtered = bots.filter((bot) => bot.bot_class === botClass);\n      setFilteredBots(filtered); // Show bots of the selected class\n    }\n  };\n\n  return (\n    <div>\n      <h1>Bot Collection</h1>\n      <FilterBar onFilter={handleFilter} /> {/* Pass the handleFilter function to the FilterBar */}\n      <div className=\"bot-list\">\n        {filteredBots.map((bot) => (\n          <BotCard key={bot.id} bot={bot} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default BotCollection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtDC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACW,GAAG,CAAC,4BAA4B,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAK;MAClBL,OAAO,CAACK,QAAQ,CAACC,IAAI,CAAC;MACtBJ,eAAe,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,YAAY,GAAIC,QAAQ,IAAK;IACjC,IAAIA,QAAQ,KAAK,KAAK,EAAE;MACtBT,eAAe,CAACH,IAAI,CAAC,CAAC,CAAC;IACzB,CAAC,MAAM;MACL,MAAMa,QAAQ,GAAGb,IAAI,CAACc,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,SAAS,KAAKJ,QAAQ,CAAC;MACjET,eAAe,CAACU,QAAQ,CAAC,CAAC,CAAC;IAC7B;EACF,CAAC;;EAED,oBACEhB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBxB,OAAA,CAACF,SAAS;MAAC2B,QAAQ,EAAEX;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACtCxB,OAAA;MAAK0B,SAAS,EAAC,UAAU;MAAAN,QAAA,EACtBf,YAAY,CAACsB,GAAG,CAAET,GAAG,iBACpBlB,OAAA,CAACH,OAAO;QAAcqB,GAAG,EAAEA;MAAI,GAAjBA,GAAG,CAACU,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CApCQD,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAsCtB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}