{"ast":null,"code":"var _jsxFileName = \"/home/titus/Development/code/phase-2/bot-battlr-code-challange/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // If you use Axios for data fetching\nimport BotCard from './BotCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotCollection() {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    // Fetch data from the local server using Axios (or any other method)\n    axios.get('http://localhost:8001/bots').then(response => {\n      setBots(response.data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  const enlistBot = bot => {\n    // Implement the logic to enlist the bot into the army\n    console.log('Enlisting bot:', bot);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bot Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-list\",\n      children: bots.map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n        bot: bot,\n        onEnlist: enlistBot\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","useEffect","axios","BotCard","jsxDEV","_jsxDEV","BotCollection","_s","bots","setBots","get","then","response","data","catch","error","console","enlistBot","bot","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onEnlist","id","_c","$RefreshReg$"],"sources":["/home/titus/Development/code/phase-2/bot-battlr-code-challange/src/components/BotCollection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // If you use Axios for data fetching\nimport BotCard from './BotCard';\n\nfunction BotCollection() {\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from the local server using Axios (or any other method)\n    axios.get('http://localhost:8001/bots')\n      .then((response) => {\n        setBots(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  const enlistBot = (bot) => {\n    // Implement the logic to enlist the bot into the army\n    console.log('Enlisting bot:', bot);\n  };\n\n  return (\n    <div>\n      <h1>Bot Collection</h1>\n      <div className=\"bot-list\">\n        {bots.map((bot) => (\n          <BotCard key={bot.id} bot={bot} onEnlist={enlistBot} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default BotCollection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACQ,GAAG,CAAC,4BAA4B,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAK;MAClBH,OAAO,CAACG,QAAQ,CAACC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAIC,GAAG,IAAK;IACzB;IACAF,OAAO,CAACG,GAAG,CAAC,gBAAgB,EAAED,GAAG,CAAC;EACpC,CAAC;EAED,oBACEb,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBnB,OAAA;MAAKoB,SAAS,EAAC,UAAU;MAAAL,QAAA,EACtBZ,IAAI,CAACkB,GAAG,CAAER,GAAG,iBACZb,OAAA,CAACF,OAAO;QAAce,GAAG,EAAEA,GAAI;QAACS,QAAQ,EAAEV;MAAU,GAAtCC,GAAG,CAACU,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CACvD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CA7BQD,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AA+BtB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}